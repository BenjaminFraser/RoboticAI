# Write a program that will iteratively update and
# predict based on the location measurements 
# and inferred motions shown below. 

# apply a measurement to the original belief, which combines the original mean
# with the new mean and the original variance with the new variance according
# to both sets of values and the specific equation to carry this out.
def update(mean1, var1, mean2, var2):
    new_mean = float(var2 * mean1 + var1 * mean2) / (var1 + var2)
    new_var = 1./(1./var1 + 1./var2)
    return [new_mean, new_var]

# apply a prediction to the belief depending on a motion to be taken.
def predict(mean1, var1, mean2, var2):
    new_mean = mean1 + mean2
    new_var = var1 + var2
    return [new_mean, new_var]

measurements = [5., 6., 7., 9., 10.]
motion = [1., 1., 2., 1., 1.]
measurement_sig = 4.
motion_sig = 2.
mu = 0.
sig = 10000.

#Please print out ONLY the final values of the mean
#and the variance in a list [mu, sig]. 

for x,y in zip(measurements, motion):
    mu, sig = update(mu, sig, x, measurement_sig)
    mu, sig = predict(mu, sig, y, motion_sig)
print [mu, sig]
